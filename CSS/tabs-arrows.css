/* ==================================================================== */
/* Custom Variables for Arrow Tabs */
/* These map to the variables in your main tab component */
/* ==================================================================== */

/* --- Base Tabs Styling (Preserve your existing CSS structure) --- */

/* Parent Container for Arrow Tabs */
.tab-arrows {
    /* Use the same styling as your .tabs container, if applicable */
    --tabs-accent: var(--accent-start, #1a759f);
    --tabs-bg: var(--nav-bg, #f0f0f0);
    --tabs-text: var(--text-primary, #ffffff); /* Text color for active state */
    --tabs-muted: var(--text-secondary, #666); /* Text color for default state */
    --tabs-border: var(--brand-blue, #1a759f);

    /* We keep the box shadow here, but remove the border for the seamless arrow look */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    width: fit-content; 
    overflow: hidden;
}

/* Hide radios, keep accessible (from your existing code) */
.tab-arrows > input[type="radio"] {
    position: absolute !important;
    inline-size: 1px;
    block-size: 1px;
    overflow: hidden;
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    white-space: nowrap;
    border: 0;
    padding: 0;
    margin: -1px;
}

/* Controls container */
.tab-arrows > .tabs__controls {
    display: flex;
    flex-wrap: nowrap; 
    padding: 0;
    background: transparent;
    border-bottom: none;
    position: static;
    top: auto;
    z-index: 1;
    backdrop-filter: none;
}

/* --- Arrow Label (Button) Styling --- */

.tab-arrows .tabs__label {
    --arrow-width: 15px; /* Controls the size of the point/V-cut */
    
    position: relative;
    display: flex;
    align-items: center; 
    justify-content: center;
    height: 40px; 
    
    /* DEFAULT STATE: Off-white background, muted text */
    background-color: #ffffff; 
    color: var(--tabs-muted);
    font-weight: 600;
    cursor: pointer;
    white-space: nowrap;
    user-select: none;
    transition: background-color .2s ease, color .2s ease, z-index 0s;
    z-index: 1; 

    /* Overlap is critical to hide the join line. */
    margin-right: -2px; 
}

/* Hover Effect: No color change, slight visual pop using z-index */
.tab-arrows .tabs__label:hover {
    /* Maintain default color and text color */
    background-color: #ffffff;
    color: var(--tabs-muted);
    z-index: 2; /* Brings the element forward, simulating the 'size change' focus */
}

/* Padding for text within the segment */
.tab-arrows .tabs__label .tabs__text {
    padding: 0 10px; 
    line-height: 1.2; 
}

/* Hide the SVG wedge from your original HTML */
.tab-arrows .tabs__label .tabs__wedge {
    display: none;
}

/* --- CLIP-PATH SHAPE DEFINITIONS (Unchanged from winning design) --- */

/* 1. First Segment (Flat Start, Arrow End) */
.tab-arrows .tabs__label:first-of-type {
    border-top-left-radius: 4px;
    border-bottom-left-radius: 4px;
    padding-left: 20px; 
    padding-right: 20px;

    /* Flat left side, arrow point on right */
    clip-path: polygon(
        0 0, 
        calc(100% - var(--arrow-width)) 0, 
        100% 50%, 
        calc(100% - var(--arrow-width)) 100%, 
        0 100%
    );
}

/* 2. Middle Segments (V-cut Start, Arrow End) */
.tab-arrows .tabs__label:not(:first-of-type):not(:last-of-type) {
    /* Inward V-cut on left, arrow point on right */
    clip-path: polygon(
        0 0, 
        calc(100% - var(--arrow-width)) 0, 
        100% 50%, 
        calc(100% - var(--arrow-width)) 100%, 
        0 100%, 
        var(--arrow-width) 50%
    );
    padding-left: 30px; 
    padding-right: 20px;
}

/* 3. Last Segment (V-cut Start, Flat End) */
.tab-arrows .tabs__label:last-of-type,
.tab-arrows .tabs__label--last {
    margin-right: 0; 
    border-top-right-radius: 4px;
    border-bottom-right-radius: 4px;
    
    /* Inward V-cut on left, flat right side */
    clip-path: polygon(
        0 0, 
        100% 0, 
        100% 100%, 
        0 100%, 
        var(--arrow-width) 50%
    );
    padding-left: 30px; 
    padding-right: 20px;
    z-index: 1; 
}

/* --- Wiring for Active State (up to 10 buttons) --- */

/* ACTIVE STATE: Apply gradient background and white text */
.tab-arrows > input[type="radio"]:nth-of-type(1):checked ~ .tabs__controls .tabs__label:nth-of-type(1),
.tab-arrows > input[type="radio"]:nth-of-type(2):checked ~ .tabs__controls .tabs__label:nth-of-type(2),
.tab-arrows > input[type="radio"]:nth-of-type(3):checked ~ .tabs__controls .tabs__label:nth-of-type(3),
.tab-arrows > input[type="radio"]:nth-of-type(4):checked ~ .tabs__controls .tabs__label:nth-of-type(4),
.tab-arrows > input[type="radio"]:nth-of-type(5):checked ~ .tabs__controls .tabs__label:nth-of-type(5),
.tab-arrows > input[type="radio"]:nth-of-type(6):checked ~ .tabs__controls .tabs__label:nth-of-type(6),
.tab-arrows > input[type="radio"]:nth-of-type(7):checked ~ .tabs__controls .tabs__label:nth-of-type(7),
.tab-arrows > input[type="radio"]:nth-of-type(8):checked ~ .tabs__controls .tabs__label:nth-of-type(8),
.tab-arrows > input[type="radio"]:nth-of-type(9):checked ~ .tabs__controls .tabs__label:nth-of-type(9),
.tab-arrows > input[type="radio"]:nth-of-type(10):checked ~ .tabs__controls .tabs__label:nth-of-type(10) {
    /* Use the gradient defined in your original CSS */
    color: #fff;
    background: linear-gradient(90deg, var(--accent-start) 0%, var(--accent-end) 100%);
    box-shadow: none; 
    border-color: transparent;
    z-index: 3; 
}

/* --- Panels Styling (from your existing code) --- */

.tab-arrows > .tabs__panels {
    padding: 16px;
    background-color: var(--body-bg, #ffffff);
}
.tab-arrows > .tabs__panels > .tabs__panel {
    display: none;
    animation: fadein .25s ease;
}
@keyframes fadein {
    from { opacity: 0; translate: 0 2px; }
    to { opacity: 1; translate: 0 0; }
}

/* Show matching panel */
.tab-arrows > input[type="radio"]:nth-of-type(1):checked ~ .tabs__panels .tabs__panel:nth-of-type(1),
.tab-arrows > input[type="radio"]:nth-of-type(2):checked ~ .tabs__panels .tabs__panel:nth-of-type(2),
.tab-arrows > input[type="radio"]:nth-of-type(3):checked ~ .tabs__panels .tabs__panel:nth-of-type(3),
.tab-arrows > input[type="radio"]:nth-of-type(4):checked ~ .tabs__panels .tabs__panel:nth-of-type(4),
.tab-arrows > input[type="radio"]:nth-of-type(5):checked ~ .tabs__panels .tabs__panel:nth-of-type(5),
.tab-arrows > input[type="radio"]:nth-of-type(6):checked ~ .tabs__panels .tabs__panel:nth-of-type(6),
.tab-arrows > input[type="radio"]:nth-of-type(7):checked ~ .tabs__panels .tabs__panel:nth-of-type(7),
.tab-arrows > input[type="radio"]:nth-of-type(8):checked ~ .tabs__panels .tabs__panel:nth-of-type(8),
.tab-arrows > input[type="radio"]:nth-of-type(9):checked ~ .tabs__panels .tabs__panel:nth-of-type(9),
.tab-arrows > input[type="radio"]:nth-of-type(10):checked ~ .tabs__panels .tabs__panel:nth-of-type(10) {
    display: block;
}
