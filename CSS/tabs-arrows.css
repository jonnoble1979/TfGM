
.tab-arrows {
  /* component-only vars */
  --tip: 24px;                          /* chevron depth (px) */
  --radius: 10px;                       /* container & end-tab rounding */
  --border-w: 1px;                      /* tab border thickness */
  --arrow-accent-start: var(--accent-start, #2e7df6);
  --arrow-accent-end:   var(--accent-end,   #7aa8ff);
  --arrow-bg:     var(--nav-bg);
  --arrow-text:   var(--text-primary);
  --arrow-muted:  var(--text-secondary);
  --arrow-border: var(--brand-blue);

  background: var(--arrow-bg);
  border: calc(var(--border-w) * 2) solid var(--arrow-border);
  border-radius: var(--radius);
  overflow: hidden;
  isolation: isolate;
  color: var(--arrow-text);
}

/* Controls strip */
.tab-arrows > .tabs__controls {
  position: relative;          /* new stacking context for clean z-index */
  display: flex;
  background: var(--arrow-bg);
  border-bottom: var(--border-w) solid var(--arrow-border);
  overflow: visible;           /* allow wedges to overlap next tab */
}

/* --- HARD ISOLATION: reset labels to avoid global collisions --- */
.tab-arrows .tabs__label {
  all: unset;                  /* wipe global label styles */
  box-sizing: border-box;

  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;

  /* Equal widths, allow wrapping for long label */
  flex: 1 1 0;
  min-width: 0;

  /* Leave room for the chevron wedge on the right */
  padding-block: 12px;
  padding-inline: 24px calc(24px + var(--tip));
  min-height: 60px;

  font: inherit;
  font-weight: 600;
  color: var(--arrow-muted);
  background: #fff;

  /* Rectangular borders (right edge is diagonal via wedge) */
  border-inline-start: var(--border-w) solid var(--arrow-border);
  border-block:        var(--border-w) solid var(--arrow-border);
  border-inline-end:   none;

  /* Interlock */
  margin-inline-end: calc(var(--tip) * -1);

  cursor: pointer;
  user-select: none;
  z-index: 1;
  transition: color .2s ease, background .2s ease, box-shadow .2s ease, z-index .2s ease;
}

/* First tab: rounded left side */
.tab-arrows .tabs__label:first-child {
  border-start-start-radius: var(--radius);
  border-end-start-radius: var(--radius);
}

/* Last tab: flat right edge; no wedge and no overlap */
.tab-arrows .tabs__label--last {
  border-inline-end: var(--border-w) solid var(--arrow-border);
  border-start-end-radius: var(--radius);
  border-end-end-radius: var(--radius);
  margin-inline-end: 0;
  padding-inline: 24px; /* remove wedge space */
}

/* Text sits above wedge */
.tab-arrows .tabs__text {
  position: relative;
  z-index: 2;
  line-height: 1.2;
  white-space: normal;
}

/* Wedge SVG (diagonal edge + stroke) */
.tab-arrows .tabs__wedge {
  position: absolute;
  inset-block: calc(var(--border-w) * -1);
  inset-inline-end: calc(var(--border-w) * -1);
  width: calc(var(--tip) + var(--border-w));
  height: calc(100% + var(--border-w) * 2);
  display: block;
  pointer-events: none;
}
.tab-arrows .wedge-fill {
  fill: var(--tab-fill, #fff);
}
.tab-arrows .wedge-stroke {
  fill: none;
  stroke: var(--arrow-border);
  stroke-width: var(--border-w);
  vector-effect: non-scaling-stroke;
  shape-rendering: geometricPrecision;
  stroke-linejoin: miter;
  stroke-miterlimit: 4;
}

/* Hover */
.tab-arrows .tabs__label:hover {
  background: #e6f0ff;
  color: var(--arrow-text);
  box-shadow: inset 0 0 0 var(--border-w) var(--arrow-border);
  z-index: 2;
}
.tab-arrows .tabs__label:hover { --tab-fill: #e6f0ff; }

/* Active (radio-checked) â€” 5 tabs wired 1:1 */
.tab-arrows > input[type="radio"]:nth-of-type(1):checked ~ .tabs__controls .tabs__label:nth-of-type(1),
.tab-arrows > input[type="radio"]:nth-of-type(2):checked ~ .tabs__controls .tabs__label:nth-of-type(2),
.tab-arrows > input[type="radio"]:nth-of-type(3):checked ~ .tabs__controls .tabs__label:nth-of-type(3),
.tab-arrows > input[type="radio"]:nth-of-type(4):checked ~ .tabs__controls .tabs__label:nth-of-type(4),
.tab-arrows > input[type="radio"]:nth-of-type(5):checked ~ .tabs__controls .tabs__label:nth-of-type(5) {
  --tab-fill: linear-gradient(90deg, var(--arrow-accent-start), var(--arrow-accent-end));
  color: #fff;
  z-index: 3;
  box-shadow: none;
}

/* Panels */
.tab-arrows > .tabs__panels {
  padding: 16px;
  background: var(--body-bg);
}
.tab-arrows > .tabs__panels > .tabs__panel {
  display: none;
  animation: fadein .25s ease;
}
.tab-arrows > input[type="radio"]:nth-of-type(1):checked ~ .tabs__panels .tabs__panel:nth-of-type(1),
.tab-arrows > input[type="radio"]:nth-of-type(2):checked ~ .tabs__panels .tabs__panel:nth-of-type(2),
.tab-arrows > input[type="radio"]:nth-of-type(3):checked ~ .tabs__panels .tabs__panel:nth-of-type(3),
.tab-arrows > input[type="radio"]:nth-of-type(4):checked ~ .tabs__panels .tabs__panel:nth-of-type(4),
.tab-arrows > input[type="radio"]:nth-of-type(5):checked ~ .tabs__panels .tabs__panel:nth-of-type(5) {
  display: block;
}

/* Radios (accessible hide) */
.tab-arrows > input[type="radio"] {
  position: absolute !important;
  inline-size: 1px;
  block-size: 1px;
  overflow: hidden;
  clip-path: inset(50%);
  white-space: nowrap;
  border: 0;
  padding: 0;
  margin: -1px;
}

/* Optional RTL flip */
:dir(rtl) .tab-arrows .tabs__label {
  border-inline-end: var(--border-w) solid var(--arrow-border);
  border-inline-start: none;
  padding-inline: calc(24px + var(--tip)) 24px;
  margin-inline-start: calc(var(--tip) * -1);
  margin-inline-end: 0;
}
:dir(rtl) .tab-arrows .tabs__label:first-child {
  border-start-end-radius: var(--radius);
  border-end-end-radius: var(--radius);
}
:dir(rtl) .tab-arrows .tabs__label--last {
  border-start-start-radius: var(--radius);
  border-end-start-radius: var(--radius);
}
:dir(rtl) .tab-arrows .tabs__wedge {
  inset-inline-start: calc(var(--border-w) * -1);
  inset-inline-end: auto;
  transform: scaleX(-1);
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .tab-arrows * { transition: none !important; animation: none !important; }
}

/* Debug helper (optional): add class 'tab-arrows--debug' on the wrapper */
.tab-arrows--debug .tabs__label { outline: 1px dashed rgba(255,0,0,.5); }
.tab-arrows--debug .tabs__wedge  { outline: 1px dashed rgba(0,128,255,.5); }

@keyframes fadein { from {opacity: 0; transform: translateY(2px);} to {opacity: 1; transform: translateY(0);} }
